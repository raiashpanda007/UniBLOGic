generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String      @id @default(cuid())
  email             String      @unique
  name              String
  username          String      @unique // Corrected typo from 'usename' to 'username'
  password          String
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  role              Role
  profilePicture    String?
  backgroundPicture String?
  upvotes           Upvotes[]
  communities       Community[] @relation("UserCommunities") // Communities the user belongs to
  adminCommunities  Community[] @relation("CommunityAdmin") // Communities the user administers
}

model Post {
  id         String    @id @default(cuid())
  title      String
  content    String
  multimedia String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  upvotes    Upvotes[]
  author     Community @relation(fields: [authorId], references: [id])
  authorId   String
}

model Upvotes {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Community {
  id        String   @id @default(cuid())
  admin     User     @relation("CommunityAdmin", fields: [adminId], references: [id])
  adminId   String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]   @relation("UserCommunities") // Users in the community
  posts     Post[]
}

enum Role {
  USER
  ADMIN
  EXTERNAL
}
